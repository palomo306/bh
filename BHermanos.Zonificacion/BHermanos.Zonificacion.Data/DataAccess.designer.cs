#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BHermanos.Zonificacion.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BHermanos")]
	public partial class DataAccessDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertZonAplicacione(ZonAplicacione instance);
    partial void UpdateZonAplicacione(ZonAplicacione instance);
    partial void DeleteZonAplicacione(ZonAplicacione instance);
    partial void InsertZonMenus(ZonMenus instance);
    partial void UpdateZonMenus(ZonMenus instance);
    partial void DeleteZonMenus(ZonMenus instance);
    partial void InsertZonPerfile(ZonPerfile instance);
    partial void UpdateZonPerfile(ZonPerfile instance);
    partial void DeleteZonPerfile(ZonPerfile instance);
    partial void InsertZonPermiso(ZonPermiso instance);
    partial void UpdateZonPermiso(ZonPermiso instance);
    partial void DeleteZonPermiso(ZonPermiso instance);
    partial void InsertZonRole(ZonRole instance);
    partial void UpdateZonRole(ZonRole instance);
    partial void DeleteZonRole(ZonRole instance);
    partial void InsertZonUsuario(ZonUsuario instance);
    partial void UpdateZonUsuario(ZonUsuario instance);
    partial void DeleteZonUsuario(ZonUsuario instance);
    #endregion
		
		public DataAccessDataContext() : 
				base(global::BHermanos.Zonificacion.Data.Properties.Settings.Default.BHermanosConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ZonAplicacione> ZonAplicaciones
		{
			get
			{
				return this.GetTable<ZonAplicacione>();
			}
		}
		
		public System.Data.Linq.Table<ZonMenus> ZonMenus
		{
			get
			{
				return this.GetTable<ZonMenus>();
			}
		}
		
		public System.Data.Linq.Table<ZonPerfile> ZonPerfiles
		{
			get
			{
				return this.GetTable<ZonPerfile>();
			}
		}
		
		public System.Data.Linq.Table<ZonPermiso> ZonPermisos
		{
			get
			{
				return this.GetTable<ZonPermiso>();
			}
		}
		
		public System.Data.Linq.Table<ZonRole> ZonRoles
		{
			get
			{
				return this.GetTable<ZonRole>();
			}
		}
		
		public System.Data.Linq.Table<ZonUsuario> ZonUsuarios
		{
			get
			{
				return this.GetTable<ZonUsuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZonAplicaciones")]
	public partial class ZonAplicacione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _fiAplicacionId;
		
		private string _fcDescripcion;
		
		private EntitySet<ZonMenus> _ZonMenus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfiAplicacionIdChanging(byte value);
    partial void OnfiAplicacionIdChanged();
    partial void OnfcDescripcionChanging(string value);
    partial void OnfcDescripcionChanged();
    #endregion
		
		public ZonAplicacione()
		{
			this._ZonMenus = new EntitySet<ZonMenus>(new Action<ZonMenus>(this.attach_ZonMenus), new Action<ZonMenus>(this.detach_ZonMenus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiAplicacionId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte fiAplicacionId
		{
			get
			{
				return this._fiAplicacionId;
			}
			set
			{
				if ((this._fiAplicacionId != value))
				{
					this.OnfiAplicacionIdChanging(value);
					this.SendPropertyChanging();
					this._fiAplicacionId = value;
					this.SendPropertyChanged("fiAplicacionId");
					this.OnfiAplicacionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fcDescripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fcDescripcion
		{
			get
			{
				return this._fcDescripcion;
			}
			set
			{
				if ((this._fcDescripcion != value))
				{
					this.OnfcDescripcionChanging(value);
					this.SendPropertyChanging();
					this._fcDescripcion = value;
					this.SendPropertyChanged("fcDescripcion");
					this.OnfcDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonAplicacione_ZonMenus", Storage="_ZonMenus", ThisKey="fiAplicacionId", OtherKey="fiAplicacionId")]
		public EntitySet<ZonMenus> ZonMenus
		{
			get
			{
				return this._ZonMenus;
			}
			set
			{
				this._ZonMenus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZonMenus(ZonMenus entity)
		{
			this.SendPropertyChanging();
			entity.ZonAplicacione = this;
		}
		
		private void detach_ZonMenus(ZonMenus entity)
		{
			this.SendPropertyChanging();
			entity.ZonAplicacione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZonMenus")]
	public partial class ZonMenus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fiMenuId;
		
		private int _fiDependeId;
		
		private string _fcDescripcion;
		
		private string _fcAplicacion;
		
		private byte _fiAplicacionId;
		
		private bool _flEstatus;
		
		private byte _fiOrden;
		
		private EntitySet<ZonPermiso> _ZonPermisos;
		
		private EntityRef<ZonAplicacione> _ZonAplicacione;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfiMenuIdChanging(int value);
    partial void OnfiMenuIdChanged();
    partial void OnfiDependeIdChanging(int value);
    partial void OnfiDependeIdChanged();
    partial void OnfcDescripcionChanging(string value);
    partial void OnfcDescripcionChanged();
    partial void OnfcAplicacionChanging(string value);
    partial void OnfcAplicacionChanged();
    partial void OnfiAplicacionIdChanging(byte value);
    partial void OnfiAplicacionIdChanged();
    partial void OnflEstatusChanging(bool value);
    partial void OnflEstatusChanged();
    partial void OnfiOrdenChanging(byte value);
    partial void OnfiOrdenChanged();
    #endregion
		
		public ZonMenus()
		{
			this._ZonPermisos = new EntitySet<ZonPermiso>(new Action<ZonPermiso>(this.attach_ZonPermisos), new Action<ZonPermiso>(this.detach_ZonPermisos));
			this._ZonAplicacione = default(EntityRef<ZonAplicacione>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiMenuId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int fiMenuId
		{
			get
			{
				return this._fiMenuId;
			}
			set
			{
				if ((this._fiMenuId != value))
				{
					this.OnfiMenuIdChanging(value);
					this.SendPropertyChanging();
					this._fiMenuId = value;
					this.SendPropertyChanged("fiMenuId");
					this.OnfiMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiDependeId", DbType="Int NOT NULL")]
		public int fiDependeId
		{
			get
			{
				return this._fiDependeId;
			}
			set
			{
				if ((this._fiDependeId != value))
				{
					this.OnfiDependeIdChanging(value);
					this.SendPropertyChanging();
					this._fiDependeId = value;
					this.SendPropertyChanged("fiDependeId");
					this.OnfiDependeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fcDescripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fcDescripcion
		{
			get
			{
				return this._fcDescripcion;
			}
			set
			{
				if ((this._fcDescripcion != value))
				{
					this.OnfcDescripcionChanging(value);
					this.SendPropertyChanging();
					this._fcDescripcion = value;
					this.SendPropertyChanged("fcDescripcion");
					this.OnfcDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fcAplicacion", DbType="VarChar(100)")]
		public string fcAplicacion
		{
			get
			{
				return this._fcAplicacion;
			}
			set
			{
				if ((this._fcAplicacion != value))
				{
					this.OnfcAplicacionChanging(value);
					this.SendPropertyChanging();
					this._fcAplicacion = value;
					this.SendPropertyChanged("fcAplicacion");
					this.OnfcAplicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiAplicacionId", DbType="TinyInt NOT NULL")]
		public byte fiAplicacionId
		{
			get
			{
				return this._fiAplicacionId;
			}
			set
			{
				if ((this._fiAplicacionId != value))
				{
					if (this._ZonAplicacione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfiAplicacionIdChanging(value);
					this.SendPropertyChanging();
					this._fiAplicacionId = value;
					this.SendPropertyChanged("fiAplicacionId");
					this.OnfiAplicacionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flEstatus", DbType="Bit NOT NULL")]
		public bool flEstatus
		{
			get
			{
				return this._flEstatus;
			}
			set
			{
				if ((this._flEstatus != value))
				{
					this.OnflEstatusChanging(value);
					this.SendPropertyChanging();
					this._flEstatus = value;
					this.SendPropertyChanged("flEstatus");
					this.OnflEstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiOrden", DbType="TinyInt NOT NULL")]
		public byte fiOrden
		{
			get
			{
				return this._fiOrden;
			}
			set
			{
				if ((this._fiOrden != value))
				{
					this.OnfiOrdenChanging(value);
					this.SendPropertyChanging();
					this._fiOrden = value;
					this.SendPropertyChanged("fiOrden");
					this.OnfiOrdenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonMenus_ZonPermiso", Storage="_ZonPermisos", ThisKey="fiMenuId", OtherKey="fiMenuId")]
		public EntitySet<ZonPermiso> ZonPermisos
		{
			get
			{
				return this._ZonPermisos;
			}
			set
			{
				this._ZonPermisos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonAplicacione_ZonMenus", Storage="_ZonAplicacione", ThisKey="fiAplicacionId", OtherKey="fiAplicacionId", IsForeignKey=true)]
		public ZonAplicacione ZonAplicacione
		{
			get
			{
				return this._ZonAplicacione.Entity;
			}
			set
			{
				ZonAplicacione previousValue = this._ZonAplicacione.Entity;
				if (((previousValue != value) 
							|| (this._ZonAplicacione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZonAplicacione.Entity = null;
						previousValue.ZonMenus.Remove(this);
					}
					this._ZonAplicacione.Entity = value;
					if ((value != null))
					{
						value.ZonMenus.Add(this);
						this._fiAplicacionId = value.fiAplicacionId;
					}
					else
					{
						this._fiAplicacionId = default(byte);
					}
					this.SendPropertyChanged("ZonAplicacione");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZonPermisos(ZonPermiso entity)
		{
			this.SendPropertyChanging();
			entity.ZonMenus = this;
		}
		
		private void detach_ZonPermisos(ZonPermiso entity)
		{
			this.SendPropertyChanging();
			entity.ZonMenus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZonPerfiles")]
	public partial class ZonPerfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _fcUsuario;
		
		private int _fiRolId;
		
		private EntityRef<ZonRole> _ZonRole;
		
		private EntityRef<ZonUsuario> _ZonUsuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfcUsuarioChanging(string value);
    partial void OnfcUsuarioChanged();
    partial void OnfiRolIdChanging(int value);
    partial void OnfiRolIdChanged();
    #endregion
		
		public ZonPerfile()
		{
			this._ZonRole = default(EntityRef<ZonRole>);
			this._ZonUsuario = default(EntityRef<ZonUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fcUsuario", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string fcUsuario
		{
			get
			{
				return this._fcUsuario;
			}
			set
			{
				if ((this._fcUsuario != value))
				{
					if (this._ZonUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfcUsuarioChanging(value);
					this.SendPropertyChanging();
					this._fcUsuario = value;
					this.SendPropertyChanged("fcUsuario");
					this.OnfcUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiRolId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int fiRolId
		{
			get
			{
				return this._fiRolId;
			}
			set
			{
				if ((this._fiRolId != value))
				{
					if (this._ZonRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfiRolIdChanging(value);
					this.SendPropertyChanging();
					this._fiRolId = value;
					this.SendPropertyChanged("fiRolId");
					this.OnfiRolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonRole_ZonPerfile", Storage="_ZonRole", ThisKey="fiRolId", OtherKey="fiRolId", IsForeignKey=true)]
		public ZonRole ZonRole
		{
			get
			{
				return this._ZonRole.Entity;
			}
			set
			{
				ZonRole previousValue = this._ZonRole.Entity;
				if (((previousValue != value) 
							|| (this._ZonRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZonRole.Entity = null;
						previousValue.ZonPerfiles.Remove(this);
					}
					this._ZonRole.Entity = value;
					if ((value != null))
					{
						value.ZonPerfiles.Add(this);
						this._fiRolId = value.fiRolId;
					}
					else
					{
						this._fiRolId = default(int);
					}
					this.SendPropertyChanged("ZonRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonUsuario_ZonPerfile", Storage="_ZonUsuario", ThisKey="fcUsuario", OtherKey="fcUsuario", IsForeignKey=true)]
		public ZonUsuario ZonUsuario
		{
			get
			{
				return this._ZonUsuario.Entity;
			}
			set
			{
				ZonUsuario previousValue = this._ZonUsuario.Entity;
				if (((previousValue != value) 
							|| (this._ZonUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZonUsuario.Entity = null;
						previousValue.ZonPerfiles.Remove(this);
					}
					this._ZonUsuario.Entity = value;
					if ((value != null))
					{
						value.ZonPerfiles.Add(this);
						this._fcUsuario = value.fcUsuario;
					}
					else
					{
						this._fcUsuario = default(string);
					}
					this.SendPropertyChanged("ZonUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZonPermisos")]
	public partial class ZonPermiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fiMenuId;
		
		private int _fiRoldId;
		
		private EntityRef<ZonMenus> _ZonMenus;
		
		private EntityRef<ZonRole> _ZonRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfiMenuIdChanging(int value);
    partial void OnfiMenuIdChanged();
    partial void OnfiRoldIdChanging(int value);
    partial void OnfiRoldIdChanged();
    #endregion
		
		public ZonPermiso()
		{
			this._ZonMenus = default(EntityRef<ZonMenus>);
			this._ZonRole = default(EntityRef<ZonRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiMenuId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int fiMenuId
		{
			get
			{
				return this._fiMenuId;
			}
			set
			{
				if ((this._fiMenuId != value))
				{
					if (this._ZonMenus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfiMenuIdChanging(value);
					this.SendPropertyChanging();
					this._fiMenuId = value;
					this.SendPropertyChanged("fiMenuId");
					this.OnfiMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiRoldId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int fiRoldId
		{
			get
			{
				return this._fiRoldId;
			}
			set
			{
				if ((this._fiRoldId != value))
				{
					if (this._ZonRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfiRoldIdChanging(value);
					this.SendPropertyChanging();
					this._fiRoldId = value;
					this.SendPropertyChanged("fiRoldId");
					this.OnfiRoldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonMenus_ZonPermiso", Storage="_ZonMenus", ThisKey="fiMenuId", OtherKey="fiMenuId", IsForeignKey=true)]
		public ZonMenus ZonMenus
		{
			get
			{
				return this._ZonMenus.Entity;
			}
			set
			{
				ZonMenus previousValue = this._ZonMenus.Entity;
				if (((previousValue != value) 
							|| (this._ZonMenus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZonMenus.Entity = null;
						previousValue.ZonPermisos.Remove(this);
					}
					this._ZonMenus.Entity = value;
					if ((value != null))
					{
						value.ZonPermisos.Add(this);
						this._fiMenuId = value.fiMenuId;
					}
					else
					{
						this._fiMenuId = default(int);
					}
					this.SendPropertyChanged("ZonMenus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonRole_ZonPermiso", Storage="_ZonRole", ThisKey="fiRoldId", OtherKey="fiRolId", IsForeignKey=true)]
		public ZonRole ZonRole
		{
			get
			{
				return this._ZonRole.Entity;
			}
			set
			{
				ZonRole previousValue = this._ZonRole.Entity;
				if (((previousValue != value) 
							|| (this._ZonRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZonRole.Entity = null;
						previousValue.ZonPermisos.Remove(this);
					}
					this._ZonRole.Entity = value;
					if ((value != null))
					{
						value.ZonPermisos.Add(this);
						this._fiRoldId = value.fiRolId;
					}
					else
					{
						this._fiRoldId = default(int);
					}
					this.SendPropertyChanged("ZonRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZonRoles")]
	public partial class ZonRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fiRolId;
		
		private string _fcNombre;
		
		private EntitySet<ZonPerfile> _ZonPerfiles;
		
		private EntitySet<ZonPermiso> _ZonPermisos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfiRolIdChanging(int value);
    partial void OnfiRolIdChanged();
    partial void OnfcNombreChanging(string value);
    partial void OnfcNombreChanged();
    #endregion
		
		public ZonRole()
		{
			this._ZonPerfiles = new EntitySet<ZonPerfile>(new Action<ZonPerfile>(this.attach_ZonPerfiles), new Action<ZonPerfile>(this.detach_ZonPerfiles));
			this._ZonPermisos = new EntitySet<ZonPermiso>(new Action<ZonPermiso>(this.attach_ZonPermisos), new Action<ZonPermiso>(this.detach_ZonPermisos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiRolId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int fiRolId
		{
			get
			{
				return this._fiRolId;
			}
			set
			{
				if ((this._fiRolId != value))
				{
					this.OnfiRolIdChanging(value);
					this.SendPropertyChanging();
					this._fiRolId = value;
					this.SendPropertyChanged("fiRolId");
					this.OnfiRolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fcNombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string fcNombre
		{
			get
			{
				return this._fcNombre;
			}
			set
			{
				if ((this._fcNombre != value))
				{
					this.OnfcNombreChanging(value);
					this.SendPropertyChanging();
					this._fcNombre = value;
					this.SendPropertyChanged("fcNombre");
					this.OnfcNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonRole_ZonPerfile", Storage="_ZonPerfiles", ThisKey="fiRolId", OtherKey="fiRolId")]
		public EntitySet<ZonPerfile> ZonPerfiles
		{
			get
			{
				return this._ZonPerfiles;
			}
			set
			{
				this._ZonPerfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonRole_ZonPermiso", Storage="_ZonPermisos", ThisKey="fiRolId", OtherKey="fiRoldId")]
		public EntitySet<ZonPermiso> ZonPermisos
		{
			get
			{
				return this._ZonPermisos;
			}
			set
			{
				this._ZonPermisos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZonPerfiles(ZonPerfile entity)
		{
			this.SendPropertyChanging();
			entity.ZonRole = this;
		}
		
		private void detach_ZonPerfiles(ZonPerfile entity)
		{
			this.SendPropertyChanging();
			entity.ZonRole = null;
		}
		
		private void attach_ZonPermisos(ZonPermiso entity)
		{
			this.SendPropertyChanging();
			entity.ZonRole = this;
		}
		
		private void detach_ZonPermisos(ZonPermiso entity)
		{
			this.SendPropertyChanging();
			entity.ZonRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZonUsuarios")]
	public partial class ZonUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _fcUsuario;
		
		private System.Data.Linq.Binary _fvPassword;
		
		private string _fcNombre;
		
		private string _fcMail;
		
		private byte _flEstatus;
		
		private EntitySet<ZonPerfile> _ZonPerfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfcUsuarioChanging(string value);
    partial void OnfcUsuarioChanged();
    partial void OnfvPasswordChanging(System.Data.Linq.Binary value);
    partial void OnfvPasswordChanged();
    partial void OnfcNombreChanging(string value);
    partial void OnfcNombreChanged();
    partial void OnfcMailChanging(string value);
    partial void OnfcMailChanged();
    partial void OnflEstatusChanging(byte value);
    partial void OnflEstatusChanged();
    #endregion
		
		public ZonUsuario()
		{
			this._ZonPerfiles = new EntitySet<ZonPerfile>(new Action<ZonPerfile>(this.attach_ZonPerfiles), new Action<ZonPerfile>(this.detach_ZonPerfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fcUsuario", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string fcUsuario
		{
			get
			{
				return this._fcUsuario;
			}
			set
			{
				if ((this._fcUsuario != value))
				{
					this.OnfcUsuarioChanging(value);
					this.SendPropertyChanging();
					this._fcUsuario = value;
					this.SendPropertyChanged("fcUsuario");
					this.OnfcUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fvPassword", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary fvPassword
		{
			get
			{
				return this._fvPassword;
			}
			set
			{
				if ((this._fvPassword != value))
				{
					this.OnfvPasswordChanging(value);
					this.SendPropertyChanging();
					this._fvPassword = value;
					this.SendPropertyChanged("fvPassword");
					this.OnfvPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fcNombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fcNombre
		{
			get
			{
				return this._fcNombre;
			}
			set
			{
				if ((this._fcNombre != value))
				{
					this.OnfcNombreChanging(value);
					this.SendPropertyChanging();
					this._fcNombre = value;
					this.SendPropertyChanged("fcNombre");
					this.OnfcNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fcMail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fcMail
		{
			get
			{
				return this._fcMail;
			}
			set
			{
				if ((this._fcMail != value))
				{
					this.OnfcMailChanging(value);
					this.SendPropertyChanging();
					this._fcMail = value;
					this.SendPropertyChanged("fcMail");
					this.OnfcMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flEstatus", DbType="TinyInt NOT NULL")]
		public byte flEstatus
		{
			get
			{
				return this._flEstatus;
			}
			set
			{
				if ((this._flEstatus != value))
				{
					this.OnflEstatusChanging(value);
					this.SendPropertyChanging();
					this._flEstatus = value;
					this.SendPropertyChanged("flEstatus");
					this.OnflEstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonUsuario_ZonPerfile", Storage="_ZonPerfiles", ThisKey="fcUsuario", OtherKey="fcUsuario")]
		public EntitySet<ZonPerfile> ZonPerfiles
		{
			get
			{
				return this._ZonPerfiles;
			}
			set
			{
				this._ZonPerfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZonPerfiles(ZonPerfile entity)
		{
			this.SendPropertyChanging();
			entity.ZonUsuario = this;
		}
		
		private void detach_ZonPerfiles(ZonPerfile entity)
		{
			this.SendPropertyChanging();
			entity.ZonUsuario = null;
		}
	}
}
#pragma warning restore 1591
